# CircleCI configuration file

version: 2.1
executors:
  go:
    docker:
      - image: cimg/go:1.20.4

parameters:
  goreleaser_binary:
    description: The path of the goreleaser binary
    type: string
    default: "/tmp/goreleaser"
  release_pattern:
    description: The regular expression to filter release tags
    type: string
    default: /^v([0-9]+\.){2}[0-9]+/

commands:
  get-goreleaser:
    description: Get goreleaser
    parameters:
      gorelaser_url:
        description: Goreleaser 1.18.2 download URL
        type: string
        default: https://github.com/goreleaser/goreleaser/releases/download/v1.18.2/goreleaser_Linux_x86_64.tar.gz
      gorelaser_output_name:
        description: Goreleaser 1.18.2 downloaded file name
        type: string
        default: << pipeline.parameters.goreleaser_binary >>.tar.gz
    steps:
      - run:
          name: Download Goreleaser
          command: curl -fLo << parameters.gorelaser_output_name >> << parameters.gorelaser_url >>
      - run:
          name: Unarchive
          command: tar -xf << parameters.gorelaser_output_name >> -C /tmp goreleaser

jobs:
  lint-test:
    executor: go
    steps:
      - checkout
      - run: make lint
      - run: make test
  release:
    executor: go
    parameters:
      gpg_private_file:
        description: The path of GPG private file
        type: string
        default: /tmp/private.txt
    steps:
      - checkout
      - get-goreleaser
      - run:
          name: Prepare GPG
          command: |
            echo -e ${GPG_PRIVATE_KEY} > << parameters.gpg_private_file >>
            gpg --import --batch << parameters.gpg_private_file >>
            rm << parameters.gpg_private_file >>
            echo "default-cache-ttl 46000" > ~/.gnupg/gpg-agent.conf
            echo "pinentry-program /usr/bin/pinentry-gtk-2" >> ~/.gnupg/gpg-agent.conf
            echo "allow-preset-passphrase" >> ~/.gnupg/gpg-agent.conf
            gpg-connect-agent reloadagent /bye
            keygrip=$(gpg-connect-agent -q 'keyinfo --list' /bye | awk '/KEYINFO/ { print $3 }')
            for k in $keygrip
            do
              echo "$GPG_PASSWORD"  | /usr/lib/gnupg/gpg-preset-passphrase --preset $k
            done
      - run:
          name: release
          command: |
            export GPG_TTY=$(tty)
            << pipeline.parameters.goreleaser_binary >> release
  build:
    executor: go
    steps:
      - checkout
      - get-goreleaser
      - run:
          name: build
          command: << pipeline.parameters.goreleaser_binary >> build --snapshot


workflows:
  publish:
    when: << pipeline.git.tag >>
    jobs:
      - release:
          filters:
            tags:
              only: << pipeline.parameters.release_pattern >>
  check:
    jobs:
      - lint-test
  build-master:
    when:
      equal: [ master, << pipeline.git.branch >> ]
    jobs:
      - build
